// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Quinelita.Data;

namespace Quinelita.Data.Migrations
{
    [DbContext(typeof(QuinelitaContext))]
    partial class QuinelitaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Quinelita.Data.Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LigaId");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("LigaId");

                    b.ToTable("Equipo");
                });

            modelBuilder.Entity("Quinelita.Data.Jornada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Jornada");
                });

            modelBuilder.Entity("Quinelita.Data.Liga", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Liga");
                });

            modelBuilder.Entity("Quinelita.Data.PartidosJornada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EquipoLocalId");

                    b.Property<int>("EquipoVisitanteId");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("JornadaId");

                    b.Property<bool>("MostrarMarcadores");

                    b.Property<int>("PartidoId");

                    b.HasKey("Id");

                    b.HasIndex("EquipoLocalId");

                    b.HasIndex("EquipoVisitanteId");

                    b.HasIndex("JornadaId");

                    b.ToTable("PartidosJornada");
                });

            modelBuilder.Entity("Quinelita.Data.Equipo", b =>
                {
                    b.HasOne("Quinelita.Data.Liga", "Liga")
                        .WithMany("Equipo")
                        .HasForeignKey("LigaId")
                        .HasConstraintName("FK_Equipo_Liga");
                });

            modelBuilder.Entity("Quinelita.Data.PartidosJornada", b =>
                {
                    b.HasOne("Quinelita.Data.Equipo", "EquipoLocal")
                        .WithMany("PartidosJornadaEquipoLocal")
                        .HasForeignKey("EquipoLocalId")
                        .HasConstraintName("FK_PartidosJornada_Equipo");

                    b.HasOne("Quinelita.Data.Equipo", "EquipoVisitante")
                        .WithMany("PartidosJornadaEquipoVisitante")
                        .HasForeignKey("EquipoVisitanteId")
                        .HasConstraintName("FK_PartidosJornada_Equipo1");

                    b.HasOne("Quinelita.Data.Jornada", "Jornada")
                        .WithMany("PartidosJornada")
                        .HasForeignKey("JornadaId")
                        .HasConstraintName("FK_PartidosJornada_Jornada");
                });
#pragma warning restore 612, 618
        }
    }
}
